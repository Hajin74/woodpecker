scalar Long

type Query {
    hello: String
}

type Mutation {
    saveBook(input: SaveBookInput!): SaveBookResponse!
    likeBook(isbn: String!): LikeBookResponse!
    saveNote(input: SaveNoteInput!): SaveNoteResponse!
    deleteNote(noteId: Long!): DeleteNoteResponse!
    getDetailNote(noteId: Long!): ReadDetailNoteResponse!
    getNotes(isbn: String!): [ReadDetailNoteResponse]!
}

input SaveBookInput {
    isbn: String!
    title: String!
    author: String
    description: String
    publisher: String
}

input SaveNoteInput {
    isbn: String!
    content: String!
}

type SaveBookResponse {
    success: Boolean!
    message: String!
}

type LikeBookResponse {
    success: Boolean!
    message: String!
}

type SaveNoteResponse {
    success: Boolean!
    message: String!
}

type DeleteNoteResponse {
    success: Boolean!
    message: String!
}

type ReadDetailNoteResponse {
    success: Boolean!
    message: String!
}
